/*eslint-disable*/export const messages=JSON.parse("{\"+iq0WF\":\"404 - Not Found\",\"Z+ZeQv\":\"404 - Not Found (authenticated)\",\"Y1Ygdx\":\"A minimal design system provides a set of UI kit components that adhere to certain design principles backed by a set of design tokens. This template defines a comprehensive set of design tokens for things like colors, typography, spacing, etc. in a globally available theme object. Additionally, the design system incorporates a UI kit that is browsable in Storybook.\",\"AnNF5e\":\"Accessibility\",\"P8fBlG\":\"Authentication\",\"VbeIOx\":\"Author\",\"astDB+\":\"Blog\",\"+R8aIc\":\"Change locale\",\"VdE+T5\":\"Change theme to dark mode\",\"DqjwQs\":\"Change theme to light mode\",\"4b3oEV\":\"Content\",\"LpcsY7\":\"Could not find post.\",\"hYgDIe\":\"Create\",\"E9bKSA\":\"Creating\",\"oRVm8M\":\"Dark Mode\",\"bM1KBa\":\"Design System\",\"O3oNi5\":\"Email\",\"hFthoo\":\"Examples\",\"EIxQvh\":\"Failed to add new blog post\",\"odZlaw\":\"Failed to load blog post.\",\"PpZkda\":\"Features\",\"fHwA1m\":\"Good accessibility is a something that should be expected from every app. The building blocks for creating accessible components are provided by React Aria. This template has pre-built UI kit components, such as Button, Text, TextInput, etc., that have accessibility baked into them. You can use and extend this UI kit to fit your needs.\",\"PdGb3h\":\"Having dark mode support is a common ask from users nowadays. This template has a ready-to-use theming setup with light and dark themes that can be easily modified to conform to the client's branding. Try to toggle the theme in the top right corner.\",\"i0qMbr\":\"Home\",\"1JOARB\":\"In the sidebar you can browse through some example pages. (TODO: add more examples)\",\"jW4kFb\":\"Internationalization\",\"zUDyah\":\"Logging in\",\"cLQciJ\":\"Logging out\",\"z0t9bb\":\"Login\",\"nOhz3x\":\"Logout\",\"4u88tV\":\"Most apps will require internationalization at some point in their lifetime. This template the necessary setup for multiple languages that are loaded lazily once selected. Try changing the language in the top right corner.\",\"HmODL2\":\"New blog post\",\"mcSxSk\":\"New blog post added\",\"xls9YS\":\"No one likes looking at a blank screen. This template implements a traditional Single-Page-Application which means that the initial JS bundle has to downloaded before the app can render. A nice looking splash screen can be shown until the app is ready to render making the app loading UX more pleasant.\",\"8ZsakT\":\"Password\",\"CQjUto\":\"Practically every app needs to have a way to log in the user. This template provides a barebones authentication setup that should be extended to have a real way to log in the user either with a cookie or JWT based authentication method.\",\"hTDMBB\":\"Reload Page\",\"/kSa8V\":\"Report an error\",\"6uKwCv\":\"Route Preloading\",\"JrsYi+\":\"Skeleton Placeholders\",\"eWzJ00\":\"Speed is one of the most important aspects of a good UX. This template introduces a pattern for preloading route's data and code-split code in order to make page transitions feel instant.\",\"qha2Ic\":\"Spinners, so many spinners, everywhere. Traditional Single-Page-Applications usually show spinners while loading data for a given page. Instead of showing simple spinners this template offers a way to implement skeleton placeholders for pages with a cool shimmering effect.\",\"m9h4Fw\":\"Splash Screen\",\"UJmAAK\":\"Subject\",\"hQRttt\":\"Submit\",\"EEzA1J\":\"Theming\",\"DO/pZy\":\"This React app contains the necessary building blocks that you need to get your project started. You can freely alter any aspect of the template to fit your needs better.\",\"uCcE0e\":\"Welcome to Taito Fullstack Template!\"}");
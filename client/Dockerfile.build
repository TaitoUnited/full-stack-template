# Builder and tester container for production build
# NOTE: Use the same cypress version both in Dockerfile and package.json to
#       avoid unnecessary cypress download
FROM ghcr.io/taitounited/cypress:9.3.1 as builder

RUN mkdir -p /develop
WORKDIR /develop

ARG SERVICE_DIR=.
COPY ${SERVICE_DIR}/package.json \
    ${SERVICE_DIR}/package-lock.* \
    /develop/

ENV NODE_ENV development
RUN npm ci --loglevel warn

COPY ${SERVICE_DIR} /develop

ENV BASE_PATH BASE_PATH
ENV ASSETS_PATH ASSETS_PATH
ENV ASSETS_DOMAIN ASSETS_DOMAIN
ENV API_ROOT ''
ENV API_URL /api
ENV APP_SENTRY_PUBLIC_DSN #sentryPublicDSN

RUN npm run unit
RUN npm run lang:compile
RUN npm run build

# Production runtime
FROM nginx:stable-alpine
ARG BUILD_VERSION
LABEL version=${BUILD_VERSION} \
    company=companyname \
    project=full-stack-template \
    role=client
RUN mkdir -p /service
WORKDIR /service
RUN chown -R nginx:nginx /service && \
    mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.orig
RUN sed -i '/application\/json/a\    application/wasm wasm;' \
    /etc/nginx/mime.types

# Copy
COPY docker-entrypoint.sh /
COPY ./nginx.conf /etc/nginx
COPY --from=builder /build .

# Move source maps to /meta by default
RUN mkdir /meta && find . -name '*.map' -exec mv {} /meta \;

# Give nginx modify rights to some files that are modified at startup
RUN find . -name '*.html' -exec chown nginx:nginx {} \; && \
    find . -name 'manifest.json' -exec chown nginx:nginx {} \;

# Startup
USER nginx
ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["nginx", "-g", "daemon off;"]
EXPOSE 8080

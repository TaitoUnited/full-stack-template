# Builder and tester container for production build

# ******************************** NOTE ***************************************
# Enable cypress and the browsers you want test against when you are ready
# to do e2e testing. Otherwise keep the ARGs commented out so that the browsers
# are not installed unnecessarily.

# Make sure you have the same cypress version specified in package.json!
# ARG CYPRESS_VERSION='12.16.0'

# Also keep in mind that the browser versions need to be exact versions!
# Check available versions here: https://github.com/cypress-io/cypress-docker-images/tree/master/factory#api
# ARG CHROME_VERSION='114.0.5735.198-1'
# ARG EDGE_VERSION='100.0.1185.29-1'
# ARG FIREFOX_VERSION='107.0'
# *****************************************************************************

# Node v20.9.0 has npm v9.6.5 (should match the version in package.json `engines` field!)
ARG NODE_VERSION='20.9.0'
# BASE_IMAGE us used by 'cypress/factory' image
ARG BASE_IMAGE='node:20.9.0'
# Change BUILDER_IMAGE to 'cypress/factory' when you are ready to do e2e testing
ARG BUILDER_IMAGE='node:20.9.0'
ARG RUNTIME_IMAGE='nginx:stable-alpine'

# Enable Cypress factory image when you are ready to do e2e testing
# FROM cypress/factory as builder
FROM ${BUILDER_IMAGE} as builder

RUN mkdir -p /develop
WORKDIR /develop

ARG SERVICE_DIR=.
COPY ${SERVICE_DIR}/package.json \
    ${SERVICE_DIR}/package-lock.* \
    ${SERVICE_DIR}/.npmrc \
    /develop/

ENV NODE_ENV development
RUN npm ci --loglevel warn --no-audit

COPY ${SERVICE_DIR} /develop

ENV BASE_PATH BASE_PATH
ENV ASSETS_PATH ASSETS_PATH
ENV ASSETS_DOMAIN ASSETS_DOMAIN
ENV API_ROOT ''
ENV API_URL /api
ENV SENTRY_DSN #sentryDSN

RUN npm run lint
RUN npm run unit
RUN npm run build

# Production runtime
FROM ${RUNTIME_IMAGE}
ARG BUILD_VERSION
LABEL version=${BUILD_VERSION} \
    company=companyname \
    project=full-stack-template \
    role=client
RUN mkdir -p /service
WORKDIR /service
RUN chown -R nginx:nginx /service && \
    mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.orig
RUN sed -i '/application\/json/a\    application/wasm wasm;' \
    /etc/nginx/mime.types

# Copy
COPY docker-entrypoint.sh /
COPY ./nginx.conf /etc/nginx
COPY --from=builder /build .

# Move source maps to /meta by default
RUN mkdir /meta && find . -name '*.map' -exec mv {} /meta \;

# Give nginx modify rights to some files that are modified at startup
RUN find . -name '*.html' -exec chown nginx:nginx {} \; && \
    find . -name 'manifest.json' -exec chown nginx:nginx {} \;

# Startup
USER nginx
ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["nginx", "-g", "daemon off;"]
EXPOSE 8080

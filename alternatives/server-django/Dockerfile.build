# Builder and tester container for production build
FROM python:3.9-alpine3.13 as builder

RUN apk add --update-cache \
  g++ \
  libffi-dev \
  postgresql-dev \
  python3-dev

RUN mkdir -p /develop
WORKDIR /develop

ARG SERVICE_DIR=.
COPY ${SERVICE_DIR}/requirements* /develop/
RUN pip3 install --upgrade pip && pip3 install -r requirements-dev.txt
COPY ${SERVICE_DIR} /develop

RUN flake8
RUN mypy --ignore-missing-imports src
# RUN pytest src # TODO: use pytest-django ?


# Production runtime container
FROM python:3.9-alpine3.13
ARG BUILD_VERSION
LABEL version=${BUILD_VERSION} \
      company=companyname \
      project=full-stack-template \
      role=server

ENV PYTHON_ENV production
RUN apk add --update-cache g++ libffi-dev nginx postgresql-dev

RUN mkdir -p /service
WORKDIR /service
COPY --from=builder /develop/src ./src
COPY --from=builder /develop/requirements-prod.txt .

RUN pip3 install --upgrade pip && \
    pip3 install -r requirements-prod.txt
RUN apk del g++ libffi-dev

COPY ${SERVICE_DIR}/uwsgi.ini .
COPY ${SERVICE_DIR}/nginx.conf /etc/nginx/conf.d/default.conf

# Make due for the nginx pid file and unix socket
RUN mkdir -p /var/run/nginx
RUN chown nginx:nginx /var/run/nginx

EXPOSE 8080
CMD nginx -s stop; nginx; nginx -s reload; uwsgi --ini uwsgi.ini

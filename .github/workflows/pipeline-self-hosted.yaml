# Tips for PR environments:
#
# You can use the following preconfigured labels to adjust the pull request:
#
# - "PR - has env": The pull request environment is left running after the CI/CD pipeline
#   execution. This is useful if you need to get feedback from designers, customers, or
#   testing personnel.
#
# - "PR - use dev db": The pull request uses dev database instead of it's own
#   database. This is useful, if testing personnel does testing in pull request
#   environments and they want to preserve data while hopping between the
#   pull-requests.
#
# - "PR - db recreate": The pull-request will recreate the target env (dev) database
#   once merged. This is useful, if you know that your database migrations include
#   breaking changes. Note that you shouldn't use this label anymore, once the
#   application has been released to production.

name: CI/CD Pipeline
on:
  push:
    branches: ["dev", "test", "qa", "demo", "stag", "canary", "prod"]
  pull_request:
    branches:
      - dev

jobs:
  prepare-storybook:
    name: Prepare storybook
    runs-on: ${{ vars.BUILD_RUNS_ON || 'TODO_DEFAULT_RUNNER' }}
    timeout-minutes: 15
    environment: ${{ github.event_name == 'pull_request' && 'pr' || github.ref_name }}
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ./tmp/GOOGLE_APPLICATION_CREDENTIALS
      ENV: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.pull_request.number) || github.ref_name }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # TODO: Remove this hack
      - name: Set Google credentials
        run: |
          mkdir -p ./tmp
          printf "%s" '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_SECRET }}' > "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Prepare Storybook container image for deployment
        uses: docker://ghcr.io/taitounited/taito-cli:ci-gcp-dev
        with:
          args: >
            artifact
            prepare:storybook:${{env.ENV}}
            ${{ env.IMAGE_TAG }}
            ""
            false
            ./client
            ./client
            Dockerfile.storybook

  prepare-client:
    name: Prepare client
    runs-on: ${{ vars.BUILD_RUNS_ON || 'TODO_DEFAULT_RUNNER' }}
    timeout-minutes: 15
    environment: ${{ github.event_name == 'pull_request' && 'pr' || github.ref_name }}
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ./tmp/GOOGLE_APPLICATION_CREDENTIALS
      ENV: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.pull_request.number) || github.ref_name }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # TODO: Remove this hack
      - name: Set Google credentials
        run: |
          mkdir -p ./tmp
          printf "%s" '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_SECRET }}' > "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Prepare client container image for deployment
        uses: docker://ghcr.io/taitounited/taito-cli:ci-gcp-dev
        with:
          args: artifact prepare:client:${{env.ENV}} ${{ env.IMAGE_TAG }}

  prepare-server:
    name: Prepare server
    runs-on: ${{ vars.BUILD_RUNS_ON || 'TODO_DEFAULT_RUNNER' }}
    timeout-minutes: 15
    environment: ${{ github.event_name == 'pull_request' && 'pr' || github.ref_name }}
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ./tmp/GOOGLE_APPLICATION_CREDENTIALS
      ENV: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.pull_request.number) || github.ref_name }}
      # Server image is always needed during deployment when running db migrations using server container image
      taito_ci_pull_always: true
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # TODO: Remove this hack
      - name: Set Google credentials
        run: |
          mkdir -p ./tmp
          printf "%s" '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_SECRET }}' > "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Prepare server container image for deployment
        uses: docker://ghcr.io/taitounited/taito-cli:ci-gcp-dev
        with:
          args: artifact prepare:server:${{env.ENV}} ${{ env.IMAGE_TAG }}

  prepare-playwright:
    name: Prepare playwright
    runs-on: ${{ vars.BUILD_RUNS_ON || 'TODO_DEFAULT_RUNNER' }}
    timeout-minutes: 15
    environment: ${{ github.event_name == 'pull_request' && 'pr' || github.ref_name }}
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ./tmp/GOOGLE_APPLICATION_CREDENTIALS
      ENV: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.pull_request.number) || github.ref_name }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            any:
              - client/**
              - server/**
              - shared/**
              - playwright/**

      # TODO: Remove this hack
      - name: Set Google credentials
        if: steps.changes.outputs.any == 'true'
        run: |
          mkdir -p ./tmp
          printf "%s" '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_SECRET }}' > "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Prepare playwright container image for deployment
        if: steps.changes.outputs.any == 'true'
        uses: docker://ghcr.io/taitounited/taito-cli:ci-gcp-dev
        with:
          args: artifact prepare:playwright:${{env.ENV}} ${{ env.IMAGE_TAG }}

  deploy:
    name: Deploy
    needs: [prepare-client, prepare-server, prepare-storybook]
    runs-on: ${{ vars.DEPLOYMENT_RUNS_ON || 'TODO_DEFAULT_RUNNER' }}
    timeout-minutes: 7
    environment: ${{ github.event_name == 'pull_request' && 'pr' || github.ref_name }}
    permissions:
      contents: read
      pull-requests: write
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ./tmp/GOOGLE_APPLICATION_CREDENTIALS
      ENV: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.pull_request.number) || github.ref_name }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # TODO: Remove this hack
      - name: Set Google credentials
        run: |
          mkdir -p ./tmp
          printf "%s" '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_SECRET }}' > "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Always recreate database for PR environments
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker://ghcr.io/taitounited/taito-cli:ci-gcp-dev
        with:
          args: db recreate:${{env.ENV}}

      - name: Deploy database migrations
        uses: docker://ghcr.io/taitounited/taito-cli:ci-gcp-dev
        with:
          args: db deploy:${{env.ENV}}
        env:
          taito_image: ghcr.io/taitounited/taito-cli:ci-gcp-dev
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
          DOCKER_HOST_PATH: ${{ runner.workspace }}/./${{ github.event.repository.name }}
          COMPOSE_PROJECT_NAME: ${{ runner.name }}

      - name: Deploy the application
        uses: docker://ghcr.io/taitounited/taito-cli:ci-gcp-dev
        with:
          args: deployment deploy:${{env.ENV}} ${{env.IMAGE_TAG}} ${{ format('"{0}"', join(github.event.pull_request.labels.*.name, '" "')) }}

      - name: Wait for application to start after deployment
        uses: docker://ghcr.io/taitounited/taito-cli:ci-gcp-dev
        with:
          args: deployment wait:${{env.ENV}}

      - name: Add PR environment url on PR as comment
        if: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'PR - has env')}}
        uses: mshick/add-pr-comment@v2
        with:
          message: |
            Your application is now running at https://TODO-${{env.ENV}}.mydomain.com

  test-playwright:
    name: Test playwright
    needs: [deploy, prepare-playwright]
    runs-on: ${{ vars.TEST_RUNS_ON || 'TODO_DEFAULT_RUNNER' }}
    timeout-minutes: 15
    environment: ${{ github.event_name == 'pull_request' && 'pr' || github.ref_name }}
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ./tmp/GOOGLE_APPLICATION_CREDENTIALS
      ENV: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.pull_request.number) || github.ref_name }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            any:
              - client/**
              - server/**
              - shared/**
              - playwright/**

      # TODO: Remove this hack
      - name: Set Google credentials
        if: steps.changes.outputs.any == 'true'
        run: |
          mkdir -p ./tmp
          printf "%s" '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_SECRET }}' > "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Run tests
        if: steps.changes.outputs.any == 'true'
        uses: docker://ghcr.io/taitounited/taito-cli:ci-gcp-dev
        with:
          args: test:playwright:${{env.ENV}}
        env:
          taito_image: ghcr.io/taitounited/taito-cli:ci-gcp-dev
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
          DOCKER_HOST_PATH: ${{ runner.workspace }}/./${{ github.event.repository.name }}
          COMPOSE_PROJECT_NAME: ${{ runner.name }}

      - name: Upload playwright logs
        if: always() && steps.changes.outputs.any == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results
          path: playwright/test-results

  test-server:
    name: Test server
    needs: [deploy]
    runs-on: ${{ vars.TEST_RUNS_ON || 'TODO_DEFAULT_RUNNER' }}
    timeout-minutes: 15
    environment: ${{ github.event_name == 'pull_request' && 'pr' || github.ref_name }}
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ./tmp/GOOGLE_APPLICATION_CREDENTIALS
      ENV: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.pull_request.number) || github.ref_name }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            server:
              - server/**
              - shared/**

      # TODO: Remove this hack
      - name: Set Google credentials
        if: steps.changes.outputs.server == 'true'
        run: |
          mkdir -p ./tmp
          printf "%s" '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_SECRET }}' > "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Run tests
        if: steps.changes.outputs.server == 'true'
        uses: docker://ghcr.io/taitounited/taito-cli:ci-gcp-dev
        with:
          args: test:server:${{env.ENV}}
        env:
          taito_image: ghcr.io/taitounited/taito-cli:ci-gcp-dev
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
          DOCKER_HOST_PATH: ${{ runner.workspace }}/./${{ github.event.repository.name }}
          COMPOSE_PROJECT_NAME: ${{ runner.name }}

  stop:
    name: Stop
    if: ${{ github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'PR - has env') }}
    needs: [test-playwright, test-server]
    runs-on: ${{ vars.DEPLOYMENT_RUNS_ON || 'TODO_DEFAULT_RUNNER' }}
    timeout-minutes: 7
    environment: ${{ github.event_name == 'pull_request' && 'pr' || github.ref_name }}
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ./tmp/GOOGLE_APPLICATION_CREDENTIALS
      ENV: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.pull_request.number) || github.ref_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # TODO: Remove this hack
      - name: Set Google credentials
        run: |
          mkdir -p ./tmp
          printf "%s" '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_SECRET }}' > "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Stop the PR environment
        uses: docker://ghcr.io/taitounited/taito-cli:ci-gcp-dev
        with:
          args: stop:${{env.ENV}}

  release:
    name: Release
    if: ${{ github.event_name != 'pull_request' }}
    needs: [test-playwright, test-server]
    runs-on: ${{ vars.BUILD_RUNS_ON || 'TODO_DEFAULT_RUNNER' }}
    timeout-minutes: 7
    environment: ${{ github.event_name == 'pull_request' && 'pr' || github.ref_name }}
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ./tmp/GOOGLE_APPLICATION_CREDENTIALS
      ENV: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.pull_request.number) || github.ref_name }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # TODO: Remove this hack
      - name: Set Google credentials
        run: |
          mkdir -p ./tmp
          printf "%s" '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_SECRET }}' > "$GOOGLE_APPLICATION_CREDENTIALS"

      - name: Release client image artifact
        uses: docker://ghcr.io/taitounited/taito-cli:ci-gcp-dev
        with:
          args: artifact release:client:${{env.ENV}} ${{ env.IMAGE_TAG }}

      - name: Release server image artifact
        uses: docker://ghcr.io/taitounited/taito-cli:ci-gcp-dev
        with:
          args: artifact release:server:${{env.ENV}} ${{ env.IMAGE_TAG }}

      - name: Release build
        uses: docker://ghcr.io/taitounited/taito-cli:ci-gcp-dev
        with:
          args: build release:${{env.ENV}}

      # TODO: enable once you get docker based git operations working on CI/CD
      # - name: Make a git tag for release
      #   uses: docker://ghcr.io/taitounited/taito-cli:ci-gcp-dev
      #   with:
      #     args: tag ${{env.ENV}}-${{ env.IMAGE_TAG }}
      #   if: ${{ github.event_name != 'pull_request' }}

  # NOTE: You can use this to release changes automatically to the next application
  # environment. However, releasing every single PR automatically all the way to
  # production is discouraged to avoid any unnecessary disruption or performance
  # degradation (e.g. because of cache invalidation). You should bundle multiple
  # changes into one production release instead.
  auto-merge:
    name: Auto-merge
    # NOTE: Define source branches automatically to be merged here, for example: fromJson('["dev", "test"]')
    if: ${{ contains(fromJson('[]'), github.ref_name) && github.event_name != 'pull_request' }}
    needs: [release]
    runs-on: ${{ vars.BUILD_RUNS_ON || 'TODO_DEFAULT_RUNNER' }}
    timeout-minutes: 3
    environment: ${{ github.event_name == 'pull_request' && 'pr' || github.ref_name }}
    env:
      ENV: ${{ github.ref_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Merge to the next application environment
        uses: docker://ghcr.io/taitounited/taito-cli:ci-gcp-dev
        with:
          args: env merge:${{env.ENV}}

  # TODO: notify
  # notify:
  # - name: Notify slack fail
  #   if: failure()
  #   timeout-minutes: 2
  #   uses: voxmedia/github-action-slack-notify-build@v1
  #   with:
  #     channel_id: builds # TODO: project channel name
  #     status: FAILED
  #     color: danger
  #   env:
  #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}

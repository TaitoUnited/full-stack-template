# TIP: For separate build and deploy phases:
# - Remove all other branches but dev: '{dev}'
# - Enable all the 'export taito_ci_phases=build' lines
# - Enable the custom section

image:
  name: ${_TEMPLATE_DEFAULT_TAITO_IMAGE}
  username:
  password:
  email:
options:
  docker: true
  max-time: 60
definitions:
  services:
    docker:
      memory: 3072

pipelines:
  branches:
    # TODO: support for feature/* (cancel build if not included in taito_environments)
    "{dev,test,uat,stag,canary,master}":
      # Prepare build
      - step:
          script:
            - export taito_mode=ci
            # - export taito_ci_phases=build
            # TODO: Cancel other ongoing builds for $ENV
            # - taito deployment cancel:$ENV $CURRENT_BUILD_ID
            - taito build prepare:$BITBUCKET_BRANCH
          artifacts:
            - taitoflag_version
            - taitoflag_images_exist
      # Prepare artifacts in parallel
      - parallel:
          - step: # admin prepare
              script:
                - export taito_mode=ci
                # - export taito_ci_phases=build
                - taito artifact prepare:admin:$BITBUCKET_BRANCH $BITBUCKET_COMMIT true
              artifacts:
                - admin.docker
                - admin-tester.docker
          - step: # client prepare
              script:
                - export taito_mode=ci
                # - export taito_ci_phases=build
                - taito artifact prepare:client:$BITBUCKET_BRANCH $BITBUCKET_COMMIT true
              artifacts:
                - client.docker
                - client-tester.docker
          - step: # server prepare
              script:
                - export taito_mode=ci
                # - export taito_ci_phases=build
                - taito artifact prepare:server:$BITBUCKET_BRANCH $BITBUCKET_COMMIT true
              artifacts:
                - server.docker
                - server-tester.docker
          - step: # worker prepare
              script:
                - export taito_mode=ci
                # - export taito_ci_phases=build
                - taito artifact prepare:worker:$BITBUCKET_BRANCH $BITBUCKET_COMMIT true
              artifacts:
                - worker.docker
                - worker-tester.docker
          - step: # www prepare
              script:
                - export taito_mode=ci
                # - export taito_ci_phases=build
                - taito artifact prepare:www:$BITBUCKET_BRANCH $BITBUCKET_COMMIT true
              artifacts:
                - www.docker
                - www-tester.docker
      # Deploy the changes to target environment
      - step:
          script:
            - export taito_mode=ci
            # - export taito_ci_phases=build
            - taito db deploy:$BITBUCKET_BRANCH
      - step:
          script:
            - export taito_mode=ci
            # - export taito_ci_phases=build
            - taito deployment deploy:$BITBUCKET_BRANCH $BITBUCKET_COMMIT
          # TODO: revert deployment on fail
          # after-script:
          #   - [ $BITBUCKET_EXIT_CODE != 0 ] && taito deployment revert:$BITBUCKET_BRANCH $BITBUCKET_COMMIT || :
          #   - [ $BITBUCKET_EXIT_CODE != 0 ] && taito db revert:$BITBUCKET_BRANCH $BITBUCKET_COMMIT || :
      # Test and verify deployment
      - step:
          script:
            - export taito_mode=ci
            # - export taito_ci_phases=build
            - "taito -v artifact load: tester"
            - taito deployment wait:$BITBUCKET_BRANCH
            - export taito_image='${_TEMPLATE_DEFAULT_TAITO_IMAGE}'
            - taito test:$BITBUCKET_BRANCH
            - taito deployment verify:$BITBUCKET_BRANCH
          # # TODO: revert deployment on fail
          # after-script:
          #   - [ $BITBUCKET_EXIT_CODE != 0 ] && taito deployment revert:$BITBUCKET_BRANCH $BITBUCKET_COMMIT || :
          #   - [ $BITBUCKET_EXIT_CODE != 0 ] && taito db revert:$BITBUCKET_BRANCH $BITBUCKET_COMMIT || :
      # Release artifacts (push previously built container images with a new tag)
      - parallel:
          - step: # admin release
              script:
                - export taito_mode=ci
                # - export taito_ci_phases=build
                - taito artifact release:admin:$BITBUCKET_BRANCH $BITBUCKET_COMMIT
          - step: # client release
              script:
                - export taito_mode=ci
                # - export taito_ci_phases=build
                - taito artifact release:client:$BITBUCKET_BRANCH $BITBUCKET_COMMIT
          - step: # server release
              script:
                - export taito_mode=ci
                # - export taito_ci_phases=build
                - taito artifact release:server:$BITBUCKET_BRANCH $BITBUCKET_COMMIT
          - step: # worker release
              script:
                - export taito_mode=ci
                # - export taito_ci_phases=build
                - taito artifact release:worker:$BITBUCKET_BRANCH $BITBUCKET_COMMIT
          - step: # www release
              script:
                - export taito_mode=ci
                # - export taito_ci_phases=build
                - taito artifact release:www:$BITBUCKET_BRANCH $BITBUCKET_COMMIT
      # Release build
      - step:
          script:
            - export taito_mode=ci
            # - export taito_ci_phases=build
            - taito build release:$BITBUCKET_BRANCH
#--------------------------------------------------------
# CUSTOM: Example for separate deploy+test+release phase
#--------------------------------------------------------

# custom:
#   deploy:
#   # Prepare build
#   - step:
#       script:
#         - export taito_mode=ci
#         - export taito_ci_phases=deploy,test,release
#         - taito build prepare:$BITBUCKET_BRANCH
#       artifacts:
#         - taitoflag_version
#         - taitoflag_images_exist
#   # Prepare artifacts in parallel
#   - parallel:
#     - step: # admin prepare
#         script:
#           - export taito_mode=ci
#           - export taito_ci_phases=deploy,test,release
#           - taito artifact prepare:admin:$BITBUCKET_BRANCH $BITBUCKET_COMMIT true
#         artifacts:
#           - admin.docker
#           - admin-tester.docker
#     - step: # client prepare
#         script:
#           - export taito_mode=ci
#           - export taito_ci_phases=deploy,test,release
#           - taito artifact prepare:client:$BITBUCKET_BRANCH $BITBUCKET_COMMIT true
#         artifacts:
#           - client.docker
#           - client-tester.docker
#     - step: # server prepare
#         script:
#           - export taito_mode=ci
#           - export taito_ci_phases=deploy,test,release
#           - taito artifact prepare:server:$BITBUCKET_BRANCH $BITBUCKET_COMMIT true
#         artifacts:
#           - server.docker
#           - server-tester.docker
#     - step: # worker prepare
#         script:
#           - export taito_mode=ci
#           - export taito_ci_phases=deploy,test,release
#           - taito artifact prepare:worker:$BITBUCKET_BRANCH $BITBUCKET_COMMIT true
#         artifacts:
#           - worker.docker
#           - worker-tester.docker
#     - step: # www prepare
#         script:
#           - export taito_mode=ci
#           - export taito_ci_phases=deploy,test,release
#           - taito artifact prepare:www:$BITBUCKET_BRANCH $BITBUCKET_COMMIT true
#         artifacts:
#           - www.docker
#           - www-tester.docker
#   # Deploy the changes to target environment
#   - step:
#       script:
#         - export taito_mode=ci
#         - export taito_ci_phases=deploy,test,release
#         - taito db deploy:$BITBUCKET_BRANCH
#   - step:
#       script:
#         - export taito_mode=ci
#         - export taito_ci_phases=deploy,test,release
#         - taito deployment deploy:$BITBUCKET_BRANCH $BITBUCKET_COMMIT
#         # TODO: revert deployment on fail
#   # Test and verify deployment
#   - step:
#       script:
#         - export taito_mode=ci
#         - export taito_ci_phases=deploy,test,release
#         - "taito -v artifact load: tester"
#         - taito deployment wait:$BITBUCKET_BRANCH
#         - taito test:$BITBUCKET_BRANCH
#         - taito deployment verify:$BITBUCKET_BRANCH
#         # # TODO: revert deployment on fail
#   # Release artifacts (push previously built container images with a new tag)
#   - parallel:
#     - step: # admin release
#         script:
#           - export taito_mode=ci
#           - export taito_ci_phases=deploy,test,release
#           - taito artifact release:admin:$BITBUCKET_BRANCH $BITBUCKET_COMMIT
#     - step: # client release
#         script:
#           - export taito_mode=ci
#           - export taito_ci_phases=deploy,test,release
#           - taito artifact release:client:$BITBUCKET_BRANCH $BITBUCKET_COMMIT
#     - step: # server release
#         script:
#           - export taito_mode=ci
#           - export taito_ci_phases=deploy,test,release
#           - taito artifact release:server:$BITBUCKET_BRANCH $BITBUCKET_COMMIT
#     - step: # worker release
#         script:
#           - export taito_mode=ci
#           - export taito_ci_phases=deploy,test,release
#           - taito artifact release:worker:$BITBUCKET_BRANCH $BITBUCKET_COMMIT
#     - step: # www release
#         script:
#           - export taito_mode=ci
#           - export taito_ci_phases=deploy,test,release
#           - taito artifact release:www:$BITBUCKET_BRANCH $BITBUCKET_COMMIT
#   # Release build
#   - step:
#       script:
#         - export taito_mode=ci
#         - export taito_ci_phases=deploy,test,release
#         - taito build release:$BITBUCKET_BRANCH

# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input CreatePostInput {
  author: String!
  content: String!
  subject: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DeletePostInput {
  id: String!
}

input Filter {
  field: String!
  type: FilterType!
  value: String!

  """Determines how the value is treated"""
  valueType: ValueType = TEXT
}

input FilterGroup {
  filters: [Filter!]!
  operator: FilterOperator!
}

enum FilterOperator {
  AND
  OR
}

enum FilterType {
  EQ
  GT
  GTE
  ILIKE
  LIKE
  LT
  LTE
  NEQ
}

type Mutation {
  """Creates a new post."""
  createPost(input: CreatePostInput!): Post!

  """Deletes a post."""
  deletePost(input: DeletePostInput!): String!

  """Updates a post."""
  updatePost(input: UpdatePostInput!): Post!
}

input Order {
  dir: OrderDirection!
  field: String!
}

enum OrderDirection {
  ASC
  DESC
}

type PaginatedPosts {
  data: [Post!]!
  total: Float!
}

input Pagination {
  limit: Float!
  offset: Float!
}

type Post {
  author: String!
  content: String!
  createdAt: DateTime!
  id: String!
  subject: String!
  updatedAt: DateTime!
}

type Query {
  """Reads a post."""
  post(id: String!): Post

  """Searches posts."""
  posts(filterGroups: [FilterGroup!] = [], order: Order = {dir: DESC, field: "createdAt"}, pagination: Pagination = {limit: 50, offset: 0}, search: String = null): PaginatedPosts!
}

input UpdatePostInput {
  author: String
  content: String
  id: String!
  subject: String
}

enum ValueType {
  DATE
  NUMBER
  TEXT
}

# Builder and tester container for production build
FROM node:lts-buster-slim as builder
ARG SERVICE_DIR=.
ARG TARGET_ENV=prod
ARG BUILD_VERSION
ENV TARGET_ENV ${TARGET_ENV}
ENV BUILD_VERSION ${BUILD_VERSION}
ENV NODE_ENV development
ENV APP_SENTRY_PUBLIC_DSN #sentryPublicDSN

RUN mkdir -p /service
WORKDIR /service

COPY ${SERVICE_DIR}/*.sh \
     ${SERVICE_DIR}/package* \
     /service/
RUN ./install.sh
RUN cp ~/.bashrc /home/node/.bashrc
RUN mkdir -p /build && \
    chown -R node:root /build && \
    chown -R node:root /service

USER node
RUN . ~/.bashrc && npm ci --loglevel warn

# Install, build and test site
COPY --chown=node:root ${SERVICE_DIR} /service
RUN . ~/.bashrc && \
    npm run install-site && \
    npm run build && \
    npm run unit


# Production runtime
FROM nginx:stable-alpine
ARG BUILD_VERSION
LABEL version=${BUILD_VERSION} \
      company=taito \
      project=full-stack-template \
      role=www
RUN mkdir -p /service
WORKDIR /service
RUN chown -R nginx:root /service && \
    mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.orig
RUN sed -i '/application\/json/a\    application/wasm wasm; text/yaml yaml yml;' \
    /etc/nginx/mime.types
COPY ./nginx.conf /etc/nginx
COPY --from=builder /build .

# Start nginx
USER nginx
EXPOSE 8080

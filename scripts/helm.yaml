# Here you can configure all your Kubernetes resources with a
# developer-friendly YAML format

# NOTE: See helm/values.yaml for a list of all service attributes
# and helm/examples.yaml for some examples.

global:
  domain: ${taito_domain}
  url: https://${taito_domain}
  publicPort: 443
  logProvider: ${taito_logging_provider}
  logFormat: ${taito_logging_format}
  logLevel: info    # trace, debug, info, warn, error, fatal
  registry: ${taito_container_registry}
  imagePullPolicy: ''
  debug: 'false'

full-stack:
  networkPolicyEnabled: true
  networkPolicyProvider: ${kubernetes_network_policy_provider}

  ingress:
    class: nginx
    namespace: ingress-nginx
    domains:
      - name: ${taito_domain}
        altDomains:
          - name: ${taito_altdomain}

  serviceDefaults:
    # Auth and security
    basicAuthEnabled: ${taito_basic_auth_enabled}
    basicAuthHtpasswdSecret: ${taito_project}-${taito_env}-basic-auth
    modsecurityEnabled: true
    serviceAccountName: ${taito_project}-${taito_env}
    # Horizontal scaling
    replicas: ${kubernetes_replicas}
    minReplicas: ${kubernetes_replicas}
    # Environment variables
    env:
      COMMON_ENV: ${taito_env}

  services:

    admin:
      paths:
        - path: /admin
      cpuRequest: 2m
      memoryRequest: 2Mi
      env:
        REPLACE_BASE_PATH: /admin
        REPLACE_ASSETS_PATH: ${taito_cdn_project_path}/${taito_build_image_tag}/admin
        REPLACE_ASSETS_DOMAIN: ${taito_cdn_domain}

    client:
      paths:
        - path: /
      cpuRequest: 2m
      memoryRequest: 2Mi
      env:
        REPLACE_BASE_PATH:
        REPLACE_ASSETS_PATH: ${taito_cdn_project_path}/${taito_build_image_tag}/client
        REPLACE_ASSETS_DOMAIN: ${taito_cdn_domain}

    # TODO: master and replica
    redis:
      image: bitnami/redis:6.0
      replicas: 1
      port: 6379
      livenessCommand:
        - redis-cli
        - ping
      memoryRequest: 10Mi
      secrets:
        REDIS_PASSWORD: ${taito_project}-${taito_env}-redis.password
      env:
        REDIS_PASSWORD_FILE: '/run/secrets/REDIS_PASSWORD'
        REDIS_AOF_ENABLED: 'no'

    server:
      paths:
        - path: /api
          clientMaxBodySize: 1m
        # EXAMPLE: Rate limit for authentication
        - path: /api/auth
          rewriteTarget: /api/auth
          limitRpm: 5
        # EXAMPLE: Rate limit for login
        - path: /api/login
          rewriteTarget: /api/login
          limitRpm: 5
      egress:
        - ip: '${db_database_real_host}/32'
        - fullname: ${taito_project}-${taito_env}-redis
        - fullname: ${taito_project}-${taito_env}-storage
      livenessInitialDelay: 120
      db: # For old gcp environments
         useProxy: ${gcp_db_proxy_enabled} # For old gcp environments
         instance: ${taito_zone}:${taito_provider_region}:${db_database_instance} # For old gcp environments
         port: ${db_database_real_port} # For old gcp environments
         proxySecret: ${taito_provider_db_proxy_secret} # For old gcp environments
      secrets:
        DATABASE_SSL_CA: ${db_database_ssl_ca_secret}
        DATABASE_SSL_CERT: ${db_database_ssl_cert_secret}
        DATABASE_SSL_KEY: ${db_database_ssl_key_secret}
        DATABASE_PASSWORD: ${db_database_app_secret}
        REDIS_PASSWORD: ${taito_project}-${taito_env}-redis.password
        BUCKET_KEY_SECRET: ${taito_project}-${taito_env}-storage.secretKey
        EXAMPLE_SECRET: ${taito_project}-${taito_env}-example.secret
      secretEnv:
        BUCKET_KEY_ID: ${taito_project}-${taito_env}-storage.accessKeyId
      env:
        BASE_PATH: /api
        API_PORT: '8080'
        API_BINDADDR: '0.0.0.0'
        SENTRY_DSN: #sentryDSN
        DATABASE_HOST: '${db_database_real_host}'
        DATABASE_PORT: '${db_database_real_port}'
        DATABASE_SSL_ENABLED: "${db_database_ssl_enabled}"
        DATABASE_SSL_CLIENT_CERT_ENABLED: "${db_database_ssl_client_cert_enabled}"
        DATABASE_SSL_SERVER_CERT_ENABLED: "${db_database_ssl_server_cert_enabled}"
        DATABASE_NAME: ${db_database_name}
        DATABASE_USER: ${db_database_app_username}
        DATABASE_POOL_MIN: '0'
        DATABASE_POOL_MAX: '5'
        REDIS_HOST: ${taito_project}-${taito_env}-redis
        REDIS_PORT: 6379
        BUCKET_URL: http://${taito_project}-${taito_env}-storage:9000/
        BUCKET_REGION: ${taito_provider_region}
        BUCKET_BUCKET: ${st_bucket_name}
        BUCKET_BROWSE_URL: https://console.cloud.google.com/storage/browser/${st_bucket_name}
        BUCKET_DOWNLOAD_URL: https://storage.cloud.google.com/${st_bucket_name}
        BUCKET_FORCE_PATH_STYLE: 'true'

    worker:
      egress:
        - ip: '${db_database_real_host}/32'
        - fullname: ${taito_project}-${taito_env}-redis
        - fullname: ${taito_project}-${taito_env}-storage
      livenessInitialDelay: 120
      db: # For old gcp environments
         useProxy: ${gcp_db_proxy_enabled} # For old gcp environments
         instance: ${taito_zone}:${taito_provider_region}:${db_database_instance} # For old gcp environments
         port: ${db_database_real_port} # For old gcp environments
         proxySecret: ${taito_provider_db_proxy_secret} # For old gcp environments
      secrets:
        DATABASE_SSL_CA: ${db_database_ssl_ca_secret}
        DATABASE_SSL_CERT: ${db_database_ssl_cert_secret}
        DATABASE_SSL_KEY: ${db_database_ssl_key_secret}
        DATABASE_PASSWORD: ${db_database_app_secret}
        REDIS_PASSWORD: ${taito_project}-${taito_env}-redis.password
        BUCKET_KEY_SECRET: ${taito_project}-${taito_env}-storage.secretKey
        EXAMPLE_SECRET: ${taito_project}-${taito_env}-example.secret
      secretEnv:
        BUCKET_KEY_ID: ${taito_project}-${taito_env}-storage.accessKeyId
      env:
        API_PORT: '8080'
        API_BINDADDR: '0.0.0.0'
        SENTRY_DSN: #sentryDSN
        DATABASE_HOST: '${db_database_real_host}'
        DATABASE_PORT: '${db_database_real_port}'
        DATABASE_SSL_ENABLED: "${db_database_ssl_enabled}"
        DATABASE_SSL_CLIENT_CERT_ENABLED: "${db_database_ssl_client_cert_enabled}"
        DATABASE_SSL_SERVER_CERT_ENABLED: "${db_database_ssl_server_cert_enabled}"
        DATABASE_NAME: ${db_database_name}
        DATABASE_USER: ${db_database_app_username}
        DATABASE_POOL_MIN: '0'
        DATABASE_POOL_MAX: '5'
        REDIS_HOST: ${taito_project}-${taito_env}-redis
        REDIS_PORT: 6379
        BUCKET_URL: http://${taito_project}-${taito_env}-storage:9000/
        BUCKET_REGION: ${taito_provider_region}
        BUCKET_BUCKET: ${st_bucket_name}
        BUCKET_BROWSE_URL: https://console.cloud.google.com/storage/browser/${st_bucket_name}
        BUCKET_DOWNLOAD_URL: https://storage.cloud.google.com/${st_bucket_name}
        BUCKET_FORCE_PATH_STYLE: 'true'

    storage:
      egress:
        - ip: public
      image: minio/minio
      port: 9000
      livenessPath: /minio/health/ready
      memoryRequest: 20Mi
      runAsUser: 2
      runAsGroup: 2
      command:
        - minio
        - gateway
        - azure # For Azure
        - gcs # For GCP
        - ${taito_resource_namespace} # For GCP
      serviceAccount: # For GCP
        secret: ${taito_project}-${taito_env}-storage-serviceaccount.key # For GCP
      secretEnv: # For GCP
        MINIO_ROOT_USER: ${taito_project}-${taito_env}-storage.accessKeyId # For GCP
        MINIO_ROOT_PASSWORD: ${taito_project}-${taito_env}-storage.secretKey # For GCP
      secretEnv: # For Azure
        MINIO_ROOT_USER: ${taito_project}-${taito_env}-storage.accessKeyId # For Azure
        MINIO_ROOT_PASSWORD: ${taito_project}-${taito_env}-storage.secretKey # For Azure
        AZURE_STORAGE_KEY: ${taito_project}-${taito_env}-storage.accessKey1 # For Azure
      env:
        AZURE_STORAGE_ACCOUNT: acmeazureware${taito_env} # For Azure
        MINIO_CONFIG_DIR: /tmp

    www:
      paths:
        - path: /docs
      cpuRequest: 2m
      memoryRequest: 2Mi
      env:
        REPLACE_BASE_PATH: /docs
        REPLACE_ASSETS_PATH: ${taito_cdn_project_path}/${taito_build_image_tag}/docs
        REPLACE_ASSETS_DOMAIN: ${taito_cdn_domain}

# Here you can configure all your Kubernetes resources with a
# developer-friendly YAML format

# NOTE: See helm/values.yaml for a list of all service attributes
# and helm/examples.yaml for some examples.

global:
  domain: ${taito_domain}
  url: https://${taito_domain}
  publicPort: 443
  logProvider: ${taito_logging_provider}
  logFormat: ${taito_logging_format}
  logLevel: info # trace, debug, info, warn, error, fatal
  registry: ${taito_container_registry}
  imagePullPolicy: ""
  debug: "false"

full-stack:
  networkPolicyEnabled: true

  ingress:
    class: nginx
    namespace: ingress-nginx
    domains:
      - name: ${taito_domain}
        altDomains:
          - name: ${taito_altdomain}
    annotations:
      nginx.ingress.kubernetes.io/configuration-snippet: |
        proxy_set_header "X-Request-id $request_id";

  serviceDefaults:
    # Auth and security
    basicAuthEnabled: ${taito_basic_auth_enabled}
    basicAuthHtpasswdSecret: ${taito_project}-${taito_env}-basic-auth
    serviceAccountName: ${taito_project}-${taito_env}
    # Horizontal scaling
    replicas: ${kubernetes_replicas}
    minReplicas: ${kubernetes_replicas}
    # Environment variables
    env:
      COMMON_ENV: ${taito_target_env}

  services:
    admin:
      paths:
        - path: /admin
      cpuRequest: 2m
      memoryRequest: 2Mi
      env:
        REPLACE_BASE_PATH: /admin
        REPLACE_ASSETS_PATH: ${taito_cdn_project_path}/${taito_build_image_tag}/admin
        REPLACE_ASSETS_DOMAIN: ${taito_cdn_domain}

    client:
      paths:
        - path: /
      cpuRequest: 2m
      memoryRequest: 2Mi
      env:
        REPLACE_BASE_PATH:
        REPLACE_ASSETS_PATH: ${taito_cdn_project_path}/${taito_build_image_tag}/client
        REPLACE_ASSETS_DOMAIN: ${taito_cdn_domain}

    # TODO: master and replica
    redis:
      # TODO: use some other non-root image: https://github.com/bitnami/charts/issues/35164
      image: bitnamilegacy/redis:8.2
      replicas: 1
      port: 6379
      livenessCommand:
        - redis-cli
        - ping
      memoryRequest: 10Mi
      secrets:
        REDIS_PASSWORD: ${taito_project}-${taito_env}-redis.password
      env:
        REDIS_PASSWORD_FILE: "/run/secrets/REDIS_PASSWORD"
        REDIS_AOF_ENABLED: "no"

    server:
      paths:
        - path: /api
          clientMaxBodySize: 1m
        # EXAMPLE: Rate limit for authentication
        - path: /api/auth
          rewriteTarget: /api/auth
          limitRpm: 5
        # EXAMPLE: Rate limit for login
        - path: /api/login
          rewriteTarget: /api/login
          limitRpm: 5
      egress:
        - ip: "${db_database_real_host}/32"
        - fullname: ${taito_project}-${taito_target_env}-redis
        - fullname: ${taito_project}-${taito_target_env}-storage # TODO: only for s3 proxy
        - domain: storage.googleapis.com # For GCP
      db: # For old gcp environments
        useProxy: ${gcp_db_proxy_enabled} # For old gcp environments
        instance: ${taito_zone}:${taito_provider_region}:${db_database_instance} # For old gcp environments
        port: ${db_database_real_port} # For old gcp environments
        proxySecret: ${taito_provider_db_proxy_secret} # For old gcp environments
      secrets:
        DATABASE_SSL_CA: ${db_database_ssl_ca_secret}
        DATABASE_SSL_CERT: ${db_database_ssl_cert_secret}
        DATABASE_SSL_KEY: ${db_database_ssl_key_secret}
        DATABASE_PASSWORD: ${db_database_app_secret}
        REDIS_PASSWORD: ${taito_project}-${taito_env}-redis.password
        BUCKET_KEY_SECRET: ${taito_project}-${taito_env}-storage.secretKey
        SESSION_SECRET: ${taito_project}-${taito_env}-session.secret
        EXAMPLE_SECRET: ${taito_project}-${taito_env}-example.secret
      secretEnv:
        BUCKET_KEY_ID: ${taito_project}-${taito_env}-storage.accessKeyId
      env:
        BASE_PATH: /api
        API_PORT: "8080"
        API_BINDADDR: "0.0.0.0"
        SENTRY_DSN: #sentryDSN
        DATABASE_HOST: "${db_database_real_host}"
        DATABASE_PORT: "${db_database_real_port}"
        DATABASE_SSL_ENABLED: "${db_database_ssl_enabled}"
        DATABASE_SSL_CLIENT_CERT_ENABLED: "${db_database_ssl_client_cert_enabled}"
        DATABASE_SSL_SERVER_CERT_ENABLED: "${db_database_ssl_server_cert_enabled}"
        DATABASE_NAME: ${db_database_name}
        DATABASE_USER: ${db_database_app_username}
        DATABASE_POOL_MIN: "1"
        DATABASE_POOL_MAX: "10"
        REDIS_HOST: ${taito_project}-${taito_target_env}-redis
        REDIS_PORT: 6379
        BUCKET_BUCKET: ${st_bucket_name}
        BUCKET_REGION: ${taito_provider_region}
        BUCKET_GCP_PROJECT_ID: ${taito_resource_namespace} # For GCP
        BUCKET_ENDPOINT: https://storage.googleapis.com # For GCP
        BUCKET_FORCE_PATH_STYLE: "true"

    worker:
      egress:
        - ip: "${db_database_real_host}/32"
        - fullname: ${taito_project}-${taito_target_env}-redis
        - fullname: ${taito_project}-${taito_target_env}-storage
      livenessCommand:
        - sh
        - -c
        - echo TODO implement health check
      db: # For old gcp environments
        useProxy: ${gcp_db_proxy_enabled} # For old gcp environments
        instance: ${taito_zone}:${taito_provider_region}:${db_database_instance} # For old gcp environments
        port: ${db_database_real_port} # For old gcp environments
        proxySecret: ${taito_provider_db_proxy_secret} # For old gcp environments
      secrets:
        DATABASE_SSL_CA: ${db_database_ssl_ca_secret}
        DATABASE_SSL_CERT: ${db_database_ssl_cert_secret}
        DATABASE_SSL_KEY: ${db_database_ssl_key_secret}
        DATABASE_PASSWORD: ${db_database_app_secret}
        REDIS_PASSWORD: ${taito_project}-${taito_env}-redis.password
        BUCKET_KEY_SECRET: ${taito_project}-${taito_env}-storage.secretKey
        EXAMPLE_SECRET: ${taito_project}-${taito_env}-example.secret
      secretEnv:
        BUCKET_KEY_ID: ${taito_project}-${taito_env}-storage.accessKeyId
      serviceAccount: # For GCP
        secret: ${taito_project}-${taito_env}-server-serviceaccount.key # For GCP
      env:
        API_PORT: "8080"
        API_BINDADDR: "0.0.0.0"
        SENTRY_DSN: #sentryDSN
        DATABASE_HOST: "${db_database_real_host}"
        DATABASE_PORT: "${db_database_real_port}"
        DATABASE_SSL_ENABLED: "${db_database_ssl_enabled}"
        DATABASE_SSL_CLIENT_CERT_ENABLED: "${db_database_ssl_client_cert_enabled}"
        DATABASE_SSL_SERVER_CERT_ENABLED: "${db_database_ssl_server_cert_enabled}"
        DATABASE_NAME: ${db_database_name}
        DATABASE_USER: ${db_database_app_username}
        DATABASE_POOL_MIN: "0"
        DATABASE_POOL_MAX: "5"
        REDIS_HOST: ${taito_project}-${taito_target_env}-redis
        REDIS_PORT: 6379
        BUCKET_BUCKET: ${st_bucket_name}
        BUCKET_REGION: ${taito_provider_region}
        BUCKET_GCP_PROJECT_ID: ${taito_resource_namespace} # For GCP
        BUCKET_ENDPOINT: https://storage.googleapis.com # For GCP
        BUCKET_FORCE_PATH_STYLE: "true"

    storage:
      egress:
        - ip: public
      image: andrewgaul/s3proxy
      # TODO: Setup s3proxy for Azure

    www:
      paths:
        - path: /docs
      cpuRequest: 2m
      memoryRequest: 2Mi
      env:
        REPLACE_BASE_PATH: /docs
        REPLACE_ASSETS_PATH: ${taito_cdn_project_path}/${taito_build_image_tag}/docs
        REPLACE_ASSETS_DOMAIN: ${taito_cdn_domain}

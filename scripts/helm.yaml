global:
  logFormat: stackdriver
  logLevel: info    # trace, debug, info, warn, error, fatal
  repository: ${taito_registry}
  imagePullPolicy: ''

server-template:
  # Ingress
  ingress:
    class: nginx
    tls: true
    maxBodySize: 1m
    basicAuth:
      enabled: true
      htpasswdSecret: ${taito_project}-${taito_env}-basic-auth
    domains:
      - ${taito_domain}

  # Stack
  services:
    admin: true
    client: true
    cache: false
    queue: false
    server: true
    storage: true
    worker: false

  # Defaults
  serviceDefaults:
    path:
    port: 8081
    livenessPath: /healthz
    replicas: ${kubectl_replicas}
    autoscale: false
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 50
    image: # 3rd party container image
    env:
      # Environment variables
    secrets:
      # Secrets
    command:
      # Command

  # Services

  admin:
    path: /admin
    tier: frontend

  client:
    path: /
    tier: frontend

  server:
    path: /api
    tier: backend
    db:
      instance: ${taito_zone}:${taito_provider_region}:${db_database_instance}
      port: 5432
      proxySecret: cloudsql-gserviceaccount.key
    serviceAccount:
      secret: ${taito_project}-${taito_env}-gserviceaccount.key
    secrets:
      S3_KEY_SECRET: ${taito_project}-${taito_env}-storage-gateway.secret
      DATABASE_PASSWORD: ${taito_project}-${taito_env}-db-app.password
    env:
      ENV: production
      DEBUG: false
      SENTRY_DSN: #sentryDSN
      API_PORT: '8081'
      API_BINDADDR: '0.0.0.0'
      DATABASE_HOST: '127.0.0.1'
      DATABASE_PORT: '5432'
      DATABASE_NAME: ${db_database_name}
      DATABASE_USER: ${db_database_name}_app
      DATABASE_POOL_MIN: '5'
      DATABASE_POOL_MAX: '10'
      S3_URL: http://${taito_project}-storage:9000/
      S3_REGION: ${taito_provider_region}
      S3_BUCKET: ${taito_project}-${taito_env}
      S3_KEY_ID: 070UEOQR6LX4YPZLFU0V

  storage:
    port: 9000
    tier: backend
    livenessDisabled: true # TODO remove
    image: minio/minio
    host: storage
    region: ${taito_provider_region}
    command:
      - minio
      - gateway
      - gcs
      - ${taito_resource_namespace}
    serviceAccount:
      secret: ${taito_project}-${taito_env}-gserviceaccount.key
    secrets:
      MINIO_SECRET_KEY: ${taito_project}-${taito_env}-storage-gateway.secret
    env:
      MINIO_ACCESS_KEY: 070UEOQR6LX4YPZLFU0V

  # TODO configure resources
  # resources: {}
    #  cpu: 100m
    #  memory: 128Mi
    #requests:
    #  cpu: 100m
    #  memory: 128Mi

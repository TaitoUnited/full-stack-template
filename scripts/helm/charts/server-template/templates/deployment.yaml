{{- $root := . -}}
{{- $env := .Values.global.env -}}
{{- $global := .Values.global -}}
{{- $provider := .Values.global.zone.provider -}}
{{- $defaults := .Values.serviceDefaults -}}

{{- range $serviceName, $serviceEnabled := .Values.services }}
{{- if $serviceEnabled }}
{{- with (index $root.Values $serviceName) }}
{{- if not .type }}
{{- if .autoscale }}
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ template "fullname" $root }}-{{ $serviceName }}
  labels:
    app: {{ template "name" $root }}
    chart: {{ $root.Chart.Name }}-{{ $root.Chart.Version | replace "+" "_" }}
    release: {{ $root.Release.Name }}
    heritage: {{ $root.Release.Service }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ template "name" $root }}-{{ $serviceName }}
  minReplicas: {{ .minReplicas | default $defaults.minReplicas }}
  maxReplicas: {{ .maxReplicas | default $defaults.maxReplicas }}
  targetCPUUtilizationPercentage: {{ .targetCPUUtilizationPercentage | default $defaults.targetCPUUtilizationPercentage }}
---
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" $root }}-{{ $serviceName }}
  labels:
    app: {{ template "name" $root }}
    chart: {{ $root.Chart.Name }}-{{ $root.Chart.Version | replace "+" "_" }}
    release: {{ $root.Release.Name }}
    heritage: {{ $root.Release.Service }}
spec:
  replicas: {{ .replicas | default $defaults.replicas }}
  selector:
    matchLabels:
      app: {{ template "name" $root }}
      release: {{ $root.Release.Name }}
      tier: {{ .tier | default $defaults.tier }}
      role: {{ $serviceName }}
  template:
    metadata:
      labels:
        app: {{ template "name" $root }}
        release: {{ $root.Release.Name }}
        tier: {{ .tier | default $defaults.tier }}
        role: {{ $serviceName }}
    spec:
      automountServiceAccountToken: false
      containers:
        - name: {{ template "name" $root }}-{{ $serviceName }}
          {{- if .image }}
          image: {{ .image }}
          {{- else }}
          image: {{ $global.registry -}} / {{- $serviceName -}} : {{- $global.build.imageTag }}
          {{- end }}
          imagePullPolicy: {{ $global.imagePullPolicy | quote }}
          {{- if .command }}
          command:
            {{- range .command }}
            - {{ . }}
            {{- end }}
          {{- end }}
          ports:
            - containerPort: {{ .port | default $defaults.port }}
          {{- if not .livenessDisabled }}
          livenessProbe:
            httpGet:
              path: {{ .livenessPath | default $defaults.livenessPath }}
              port: {{ .livenessPort | default .port | default $defaults.port }}
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
          {{- end }}
          envFrom:
            - prefix: COMMON_
              configMapRef:
                name: {{ template "fullname" $root }}-common
          env:
            {{- if and (.serviceAccount) (eq $provider "gcloud") }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /serviceaccount/{{ regexFind "[a-zA-Z]*$" .serviceAccount.secret }}
            {{- end }}
            {{- range $name, $value := .env }}
            - name: {{ $name }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $name, $value := .secrets }}
            - name: {{ $name }}
              valueFrom:
                secretKeyRef:
                  name: {{ regexReplaceAll "\\.[a-zA-Z]*$" $value "" }}
                  key: {{ regexFind "[a-zA-Z]*$" $value }}
            {{- end }}
          volumeMounts:
          {{- if .sidecar }}
          {{- if .sidecar.enabled }}
          {{- if .sidecar.sharedVolume }}
            - name: shared
              mountPath: {{ .sidecar.sharedVolume.mountPath }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if and (.serviceAccount) (eq $provider "gcloud") }}
            - name: serviceaccount
              mountPath: /serviceaccount
              readOnly: true
          {{- end }}

        {{- if .sidecar }}
        {{- if .sidecar.enabled }}
        - name: {{ template "name" $root }}-{{ .sidecar.name }}
          {{- if .sidecar.image }}
          image: {{ .sidecar.image }}
          {{- else }}
          image: {{ $global.registry -}} / {{- .sidecar.name -}} : {{- $global.build.imageTag }}
          {{- end }}
          imagePullPolicy: {{ $global.imagePullPolicy | quote }}
          {{- if .sidecar.command }}
          command:
            {{- range .sidecar.command }}
            - {{ . }}
            {{- end }}
          {{- end }}
          ports:
            - containerPort: {{ .sidecar.port | default $defaults.port }}
          {{- if not .sidecar.livenessDisabled }}
          livenessProbe:
            httpGet:
              path: {{ .sidecar.livenessPath | default $defaults.livenessPath }}
              port: {{ .sidecar.livenessPort | default .sidecar.port | default $defaults.port }}
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
          {{- end }}
          envFrom:
            - prefix: COMMON_
              configMapRef:
                name: {{ template "fullname" $root }}-common
          env:
            {{- if and (.sidecar.serviceAccount) (eq $provider "gcloud") }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /serviceaccount/{{ regexFind "[a-zA-Z]*$" .serviceAccount.secret }}
            {{- end }}
            {{- range $name, $value := .sidecar.env }}
            - name: {{ $name }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $name, $value := .sidecar.secrets }}
            - name: {{ $name }}
              valueFrom:
                secretKeyRef:
                  name: {{ regexReplaceAll "\\.[a-zA-Z]*$" $value "" }}
                  key: {{ regexFind "[a-zA-Z]*$" $value }}
            {{- end }}
          volumeMounts:
          {{- if .sidecar.sharedVolume }}
            - name: shared
              mountPath: {{ .sidecar.sharedVolume.sidecarMountPath }}
          {{- end }}
          {{- if and (.sidecar.serviceAccount) (eq $provider "gcloud") }}
            - name: serviceaccount
              mountPath: /serviceaccount
              readOnly: true
          {{- end }}
        {{- end }}
        {{- end }}

        {{- if and (.db) (ne $env "local") (eq $provider "gcloud") }}
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.13
          command:
            - /cloud_sql_proxy
            - -verbose=false
            - -log_debug_stdout=true
            - --dir=/cloudsql
            - -instances={{ .db.instance }}=tcp:{{ .db.port }}
            - -credential_file=/secrets/cloudsql/{{ regexFind "[a-zA-Z]*$" .db.proxySecret }}
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
            - name: ssl-certs
              mountPath: /etc/ssl/certs
            - name: cloudsql
              mountPath: /cloudsql
        {{- end }}
      volumes:
        {{- if .sidecar }}
        {{- if .sidecar.enabled }}
        {{- if .sidecar.sharedVolume }}
        - name: shared
          emptyDir:
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if and (.db) (ne $env "local") (eq $provider "gcloud") }}
        - name: cloudsql-instance-credentials
          secret:
            secretName: {{ regexReplaceAll "\\.[a-zA-Z]*$" .db.proxySecret "" }}
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
        - name: cloudsql
          emptyDir:
        {{- end }}
        {{- if and (.serviceAccount) (eq $provider "gcloud") }}
        - name: serviceaccount
          secret:
            secretName: {{ regexReplaceAll "\\.[a-zA-Z]*$" .serviceAccount.secret "" }}
        {{- end }}
---
{{- end }}
{{- end }}
{{- end }}
{{- end }}

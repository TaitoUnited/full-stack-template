{{ if .Values.stack.admin }}
{{ if .Values.admin.autoscale }}
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ template "name" . }}-{{ .Values.stack.admin }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: {{ template "name" . }}-{{ .Values.stack.admin }}
  minReplicas: {{ .Values.admin.minReplicas }}
  maxReplicas: {{ .Values.admin.maxReplicas }}
  targetCPUUtilizationPercentage: {{ .Values.admin.targetCPUUtilizationPercentage }}
{{ end }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "name" . }}-{{ .Values.stack.admin }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.admin.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
        tier: frontend
        role: admin
    spec:
      containers:
        - name: {{ template "name" . }}-{{ .Values.stack.admin }}
          image: {{ .Values.repository -}} / {{- .Values.stack.admin -}} : {{- .Values.build.imageTag }}
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          ports:
            - containerPort: {{ .Values.admin.port }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
          envFrom:
            - prefix: COMMON_
              configMapRef:
                name: {{ template "name" . }}-common
          env:
            {{- range $name, $value := .Values.admin.env }}
            - name: {{ $name }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $name, $value := .Values.admin.secrets }}
            - name: {{ $name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $value }}
                  key: SECRET
            {{- end }}
{{ end }}

{{ if .Values.stack.client }}
{{ if .Values.client.autoscale }}
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ template "name" . }}-{{ .Values.stack.client }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: {{ template "name" . }}-{{ .Values.stack.client }}
  minReplicas: {{ .Values.client.minReplicas }}
  maxReplicas: {{ .Values.client.maxReplicas }}
  targetCPUUtilizationPercentage: {{ .Values.client.targetCPUUtilizationPercentage }}
{{ end }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "name" . }}-{{ .Values.stack.client }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.client.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
        tier: frontend
        role: client
    spec:
      containers:
        - name: {{ template "name" . }}-{{ .Values.stack.client }}
          image: {{ .Values.repository -}} / {{- .Values.stack.client -}} : {{- .Values.build.imageTag }}
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          ports:
            - containerPort: {{ .Values.client.port }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
          envFrom:
            - prefix: COMMON_
              configMapRef:
                name: {{ template "name" . }}-common
          env:
            {{- range $name, $value := .Values.client.env }}
            - name: {{ $name }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $name, $value := .Values.client.secrets }}
            - name: {{ $name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $value }}
                  key: SECRET
            {{- end }}
{{ end }}

{{ if .Values.stack.server }}
{{ if .Values.server.autoscale }}
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ template "name" . }}-{{ .Values.stack.server }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: {{ template "name" . }}-{{ .Values.stack.server }}
  minReplicas: {{ .Values.server.minReplicas }}
  maxReplicas: {{ .Values.server.maxReplicas }}
  targetCPUUtilizationPercentage: {{ .Values.server.targetCPUUtilizationPercentage }}
{{ end }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "name" . }}-{{ .Values.stack.server }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.server.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
        tier: backend
        role: server
    spec:
      containers:
        - name: {{ template "name" . }}-{{ .Values.stack.server }}
          image: {{ .Values.repository -}} / {{- .Values.stack.server -}} : {{- .Values.build.imageTag }}
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          ports:
            - containerPort: {{ .Values.server.port }}
          livenessProbe:
            httpGet:
              path: /infra/healthz
              port: {{ .Values.server.port }}
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
          envFrom:
            - prefix: COMMON_
              configMapRef:
                name: {{ template "name" . }}-common
            {{ if .Values.stack.database }}
            - prefix: DATABASE_
              configMapRef:
                name: {{ template "name" . }}-database # {{ .Values.stack.database }}
            - prefix: DATABASE_
              secretRef:
                name: db.{{ template "fullname" . }}.app # {{ .Values.stack.database }}
            {{ end }}
            # - prefix: BUCKET_
            #   configMapRef:
            #     name: {{ template "name" . }}-bucket # {{ .Values.stack.bucket }}
            # - prefix: BUCKET_
            #   secretRef:
            #     name: {{ template "name" . }}-bucket # {{ .Values.stack.bucket }}
          env:
            {{- range $name, $value := .Values.server.env }}
            - name: {{ $name }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $name, $value := .Values.server.secrets }}
            - name: {{ $name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $value }}
                  key: SECRET
            {{- end }}
            - name: API_PORT
              value: {{ .Values.server.port | quote }}
            - name: API_BINDADDR
              value: {{ .Values.server.bindAddr | quote }}
        # - name: {{ template "name" . }}-{{ .Values.stack.server }}-monitor
        #   image: wikiwi/stackdriver-agent
        #   imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
  {{ if and (.Values.stack.database) (ne .Values.env "local") }}
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command:
            - /cloud_sql_proxy
            - -verbose=false
            - --dir=/cloudsql
            - -instances={{ .Values.database.db }}=tcp:{{ .Values.database.port }}
            - -credential_file=/secrets/cloudsql/SECRET
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
            - name: ssl-certs
              mountPath: /etc/ssl/certs
            - name: cloudsql
              mountPath: /cloudsql
      # Could these be common volumes for all apps?
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: ext.google-cloudsql.proxy
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
        - name: cloudsql
          emptyDir:
  {{ end }}

{{ end }}

{{ if .Values.stack.cache }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "name" . }}-{{ .Values.stack.cache }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.cache.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
        tier: backend
        role: cache
    spec:
      containers:
        - name: {{ template "name" . }}-{{ .Values.stack.cache }}
          image: {{ .Values.cache.image | quote }}
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          ports:
            - containerPort: {{ .Values.cache.port }}
        # TODO liveness and readiness probe
        # - name: {{ template "name" . }}-{{ .Values.stack.cache }}-monitor
        #   image: wikiwi/stackdriver-agent
        #   imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          env:
            {{- range $name, $value := .Values.cache.env }}
            - name: {{ $name }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $name, $value := .Values.cache.secrets }}
            - name: {{ $name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $value }}
                  key: SECRET
            {{- end }}

{{ end }}

{{ if and (.Values.stack.database) (eq .Values.env "local") }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "name" . }}-{{ .Values.stack.database }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.database.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
        tier: backend
        role: database
    spec:
      containers:
        - name: {{ template "name" . }}-{{ .Values.stack.database }}
          image: {{ .Values.database.image | quote }}
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          ports:
            - containerPort: {{ .Values.database.port }}
          envFrom:
            - prefix: POSTGRES_
              configMapRef:
                name: {{ template "name" . }}-{{ .Values.stack.database }}
            - prefix: POSTGRES_
              secretRef:
                name: {{ template "name" . }}-{{ .Values.stack.database }}
          env:
            {{- range $name, $value := .Values.database.env }}
            - name: {{ $name }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $name, $value := .Values.database.secrets }}
            - name: {{ $name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $value }}
                  key: SECRET
            {{- end }}
{{ end }}

{{ if and (.Values.stack.bucket) (eq .Values.env "local") }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "name" . }}-{{ .Values.stack.bucket }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.bucket.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
        tier: backend
        role: bucket
    spec:
      containers:
        - name: {{ template "name" . }}-{{ .Values.stack.bucket }}
          image: {{ .Values.bucket.image | quote }}
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          command:
            - server /export
          ports:
            - containerPort: {{ .Values.bucket.port }}
          env:
            {{- range $name, $value := .Values.server.env }}
            - name: {{ $name }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $name, $value := .Values.server.secrets }}
            - name: {{ $name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $value }}
                  key: SECRET
            {{- end }}
{{ end }}
